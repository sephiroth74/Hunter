apply plugin: 'java-library'

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    implementation 'com.android.tools.build:gradle:4.1.0'
    implementation 'com.android.tools.build:gradle-api:4.1.0'
    implementation 'commons-io:commons-io:2.6'
    implementation "org.ow2.asm:asm:${asm_version}"
    implementation "org.ow2.asm:asm-util:${asm_version}"
    implementation "org.ow2.asm:asm-commons:${asm_version}"
}

repositories {
    google()
    jcenter()
    mavenCentral()
    mavenLocal()
}


version = rootProject.ext.hunter_version
group = rootProject.ext.hunter_library_group


def props = extensions.extraProperties.properties
def repoPath = props.get('hunter.repo.path')
def repoUrl = props.get('hunter.repo.url')
def licenseUrl = props.get('hunter.license.url')
def licenseName = props.get('hunter.license.name')

println(group + ':' + name + ':' + version)

if (is_local) {
    apply plugin: 'maven'

    def localRepoURL = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: localRepoURL)
            }
        }
    }
} else {

    apply plugin: 'com.bmuschko.nexus'

    modifyPom {
        project {
            name 'Hunter Transform'
            description 'Transform plugin for android projects.'
            url repoUrl

            scm {
                url repoUrl
                connection 'scm:https://git@' + repoPath + '.git'
                developerConnection 'scm:git://' + repoPath + '.git'
            }

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id props.get('hunter.developer.id')
                    name props.get('hunter.developer.name')
                    email props.get('hunter.developer.email')
                    roles 'architect', 'developer'
                }
            }
            contributors {
                contributor {
                    name props.get('hunter.contributor1.name')
                    email props.get('hunter.contributor1.email')
                    roles 'developer'
                }
            }
        }
    }

    extraArchive {
        sources = true
        tests = false
        javadoc = true
    }

//    apply from: 'https://raw.githubusercontent.com/sephiroth74/gradle-mvn-push/master/gradle-mvn-push.gradle'
}


