apply plugin: 'com.android.library'


version = rootProject.ext.hunter_version
group = rootProject.ext.hunter_library_group

def props = extensions.extraProperties.properties
def repoPath = props.get('hunter.repo.path')
def repoUrl = props.get('hunter.repo.url')
def licenseUrl = props.get('hunter.license.url')
def licenseName = props.get('hunter.license.name')


android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName version
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

println(group + ':' + name + ':' + version)

if (is_local) {
    apply plugin: 'maven'

    def localRepoURL = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: localRepoURL)
            }
        }
    }
} else {

    apply plugin: 'com.bmuschko.nexus'

    modifyPom {
        project {
            name 'Hunter Debug Library'
            description 'Debug Library for Android'
            url repoUrl

            scm {
                url repoUrl
                connection 'scm:https://git@' + repoPath + '.git'
                developerConnection 'scm:git://' + repoPath + '.git'
            }

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id props.get('hunter.developer.id')
                    name props.get('hunter.developer.name')
                    email props.get('hunter.developer.email')
                    roles 'architect', 'developer'
                }
            }
            contributors {
                contributor {
                    name props.get('hunter.contributor1.name')
                    email props.get('hunter.contributor1.email')
                    roles 'developer'
                }
            }
        }
    }
}
