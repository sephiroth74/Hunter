// Top-level build file where you can add configuration options common to all sub-projects/modules.


buildscript {
    def props = extensions.extraProperties.properties

    ext.kotlin_version = "1.4.10"
    ext.asm_version = props.get('asmVersion')
    ext.hunter_version = props.get('hunter.library.version')
    ext.hunter_library_group = props.get('hunter.library.group')
    ext.is_local = Boolean.parseBoolean(useLocalRepo)

    println("ext:")
    println("   kotlin_version: ${kotlin_version}")
    println("   asm_version: ${asm_version}")
    println("   hunter_version: ${hunter_version}")
    println("   hunter_library_group: ${hunter_library_group}")
    println("   is_local: ${is_local}")

    repositories {
        if (is_local) {
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        google()
            maven { url 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath }
            mavenLocal()
        }

        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        if (!is_local) {
            maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
            maven { url 'https://oss.sonatype.org/content/repositories/releases' }
        } else {
            maven { url 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath }
        }
        google()
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
